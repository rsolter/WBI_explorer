tmp_World_names <- tmp_World_names %>% select(iso2c,country) %>% unique()
# Subsetting African Countries from WBI data
africanCountries <- c("Algeria","Angola","Benin","Botswana",
"Burkina Faso","Burundi","Cabo Verde",
"Central African Rep","Cameroon","Chad","Congo, Dem. Rep.","Congo, Rep.",
"Cote d'Ivoire","Djibouti","Egypt, Arab Rep.","Equatorial Guinea",
"Eritrea","Ethiopia","Gabon","Gambia, The",
"Ghana","Guinea","Guinea-Bissau","Kenya",
"Lesotho","Liberia","Libya","Madagascar",
"Malawi","Mali","Mauritania","Morocco",
"Mozambique","Namibia","Niger","Nigeria",
"Rwanda","Senegal","Seychelles","Sierra Leone","Somalia",
"South Africa","South Sudan","Sudan","Swaziland","Tanzania",
"Togo","Tunisia","Uganda","Zambia","Zimbabwe")
af_country_list <- tmp_World_names %>% filter(country%in%africanCountries)
# Getting geographic Shape file for same countries
library(tmap)
data("World")
World$name <- as.character(World$name)
# There are differences in some of the country names. Changing 'World' to match WBI data
World$name <- ifelse(World$name=="Dem. Rep. Congo","Congo, Dem. Rep.",
ifelse(World$name=="Congo","Congo, Rep.",
ifelse(World$name=="Egypt","Egypt, Arab Rep.",
ifelse(World$name=="Eq. Guinea","Equatorial Guinea",
ifelse(World$name=="Gambia","Gambia, The",World$name)))))
# subsetting down to necessary columns as well as african countries above, and those missing
africa_geo <- World %>%
dplyr::select(iso_a3,name,geometry) %>%
filter(name%in%c(africanCountries,"Libya","Mauritania","Central African Rep.",
"S. Sudan","Zimbabwe","Somalia","Eritrea","Djibouti","W. Sahara"))
rm(World)
save(africa_geo,file="Datasets/africa_geo.rdata")
## WDI Test File ----
# Indicators can be searched for by keyword
WDIsearch('gdp')[1:10,]
WDI_dict <- WDIsearch()
# Selecting random subset of indicators
Indicators <- c("SI.DST.FRST.20","NY.GDP.PCAP.KD.ZG","EG.ELC.ACCS.ZS","NY.GDP.MKTP.CD")
# Income share held by lowest 20% - NY.GDP.PCAP.PP.CD
# GDP per capita growth (annual %) - NY.GDP.PCAP.KD.ZG
# Access to electricity (% of population) - EG.ELC.ACCS.ZS
# GDP (current US$) - NY.GDP.MKTP.CD
# Downloading by indicator for the last 30 years
dat = WDI(indicator=Indicators, country = af_country_list$iso2c, start=1960, end=2019)
# Using 'na.lofc' from zoo to replaces NAs with previous value recorded
#ao <- dat %>% filter(iso2c%in%c("AO","BJ"))
nested <- dat %>% group_by(country) %>% nest()
# Looping through countries
for(j in 1:nrow(nested)){
tmp_country_data <- nested$data[[j]] %>% as.data.frame()
# using 'na.lofc' from zoo to replaces NAs with previous value recorded
tmp_country_data2 <- tmp_country_data[,3:ncol(tmp_country_data)]
tmp_country_data_fill <- apply(tmp_country_data2,2,na.locf)
# Padding tmp_country_data_fill with NAs to match desired lengths (number of years)
desired_length <- nrow(tmp_country_data)
for(i in 1:length(tmp_country_data_fill)){
vec_length<-(length(tmp_country_data_fill[[i]]))
if (vec_length<desired_length){
padding <- desired_length-vec_length
tmp_country_data_fill[[i]] <- c(rep(NA,padding),tmp_country_data_fill[[i]])
} else
tmp_country_data_fill[[i]] <- tmp_country_data_fill[[i]]
}
country_data_out <- cbind(tmp_country_data[,1:2],tmp_country_data_fill)
# Over writing nested data
nested$data[[j]] <- country_data_out
}
processed_WDI <- nested %>% unnest()
save(processed_WDI,file="Datasets/processed_WDI.rdata")
processed_WDI <- nested %>% unnest(cols = c(data))
save(processed_WDI,file="Datasets/processed_WDI.rdata")
glimpse(processed_WDI)
WDI_long <-processed_WDI %>% gather(metric, value, 4:7)
# Test plot of Income share held by lowest 20% - NY.GDP.PCAP.PP.CD
tmp<- WDI_long %>% filter(metric=="NY.GDP.PCAP.PP.CD")
tmp
head(WDI_long)
table(WDI_long$metric)
# Test plot of Access to electricity (% of population) - EG.ELC.ACCS.ZS
tmp<- WDI_long %>% filter(metric=="EG.ELC.ACCS.ZS")
head(tmp)
ggplot(tmp,aes(x=year,y=value)) + geom_lin(color=country)
ggplot(tmp,aes(x=year,y=value)) + geom_line(color=country)
ggplot(tmp,aes(x=year,y=value)) + geom_line(aes(color=country))
glimpse(tmp)
normal_tmp <- tmp %>% group_by(country,iso2c,metric) %>% mutate(norm_value=value/max(value))
glimpse(normal_tmp)
normal_tmp <- tmp %>% group_by(country,iso2c,metric) %>% mutate(norm_value=value/max(value,na.rm=T))
glimpse(normal_tmp)
ggplot(normal_tmp,aes(x=year,y=norm_value)) + geom_line(aes(color=country))
ggplot(tmp,aes(x=year,y=value)) + geom_line(aes(color="green",alpha=0.5))
ggplot(tmp,aes(x=year,y=value)) + geom_line(aes(color="green"), alpha=0.5)
ggplot(tmp,aes(x=year,y=value)) + geom_line(aes(color=country))
ggplot(tmp,aes(x=year,y=value, group=country)) + geom_line(aes(color=country))
ggplot(tmp,aes(x=year,y=value, group=country)) + geom_line(aes(color="green"))
ggplot(tmp,aes(x=year,y=value, group=country)) + geom_line(color="green")
ggplot(tmp,aes(x=year,y=value, group=country)) + geom_line(color="green",alpha=0.5)
ggplot(tmp,aes(x=year,y=value, group=country)) + geom_line(color="grey",alpha=0.5)
ggplot(tmp,aes(x=year,y=value, group=country)) + geom_line(color="grey",alpha=0.5) + theme_simple()
ggplot(tmp,aes(x=year,y=value, group=country)) + geom_line(color="grey",alpha=0.5) + theme_minimal()
ggplot(tmp,aes(x=year,y=value, group=country)) + geom_line(color="grey",alpha=0.6) + theme_minimal()
ggplot(normal_tmp,aes(x=year,y=norm_value, group=country)) + geom_line(color="grey",alpha=0.6) + theme_minimal()
library(plotly)
x <- ggplot(normal_tmp,aes(x=year,y=norm_value, group=country)) + geom_line(color="grey",alpha=0.6) + theme_minimal()
ggplotly(x)
x <- ggplot(normal_tmp,aes(x=year,y=norm_value, group=country)) + geom_line(color="grey",alpha=0.6) + theme_minimal()
ggplotly(x)
glimpse(normal_tmp)
# http://ofdataandscience.blogspot.com/2013/03/capital-bikeshare-time-series-clustering.html
WDI_long <-processed_WDI %>% gather(metric, value, 4:7) %>% select(-iso2c)
# Test plot of Access to electricity (% of population) - EG.ELC.ACCS.ZS
tmp<- WDI_long %>% filter(metric=="EG.ELC.ACCS.ZS")
ggplot(tmp,aes(x=year,y=value)) + geom_line(aes(color=country))
ggplot(tmp,aes(x=year,y=value, group=country)) + geom_line(color="grey",alpha=0.6) + theme_minimal()
# normalized data by series
normal_tmp <- tmp %>% group_by(country,iso2c,metric) %>% mutate(norm_value=value/max(value,na.rm=T))
ggplot(normal_tmp,aes(x=year,y=norm_value)) + geom_line(aes(color=country))
ggplot(normal_tmp,aes(x=year,y=norm_value, group=country)) + geom_line(color="grey",alpha=0.6) + theme_minimal()
normal_tmp %>% head()
normal_tmp %>% group_by(year) %>% summarise(sumNA=sum(is.na(y)))
normal_tmp %>% group_by(year) %>% summarise(sumNA=sum(is.na(value)))
# Counting NAs by year
yearlyNAs<- normal_tmp %>% group_by(year) %>% summarise(sumNA=sum(is.na(value)))
head(yearlyNAs)
View(yearlyNAs)
nomral_tmp
normal_tmp
# http://ofdataandscience.blogspot.com/2013/03/capital-bikeshare-time-series-clustering.html
WDI_long <-processed_WDI %>% gather(metric, value, 4:7) %>% select(-iso2c)
# Test plot of Access to electricity (% of population) - EG.ELC.ACCS.ZS
tmp<- WDI_long %>% filter(metric=="EG.ELC.ACCS.ZS")
ggplot(tmp,aes(x=year,y=value)) + geom_line(aes(color=country))
ggplot(tmp,aes(x=year,y=value, group=country)) + geom_line(color="grey",alpha=0.6) + theme_minimal()
# normalized data by series
normal_tmp <- tmp %>% group_by(country,metric) %>% mutate(norm_value=value/max(value,na.rm=T)) %>% select(-value)
ggplot(normal_tmp,aes(x=year,y=norm_value)) + geom_line(aes(color=country))
ggplot(normal_tmp,aes(x=year,y=norm_value, group=country)) + geom_line(color="grey",alpha=0.6) + theme_minimal()
# Counting NAs by year
yearlyNAs<- normal_tmp %>% group_by(year) %>% summarise(sumNA=sum(is.na(value)))
View(yearlyNAs) # Start to collect data for the majority of countries in the 90's
# Spreading to wide format
normal_tmp
# Counting NAs by year
yearlyNAs<- normal_tmp %>% group_by(year) %>% summarise(sumNA=sum(is.na(norm_value)))
View(yearlyNAs) # Start to collect data for the majority of countries in the 90's
glimpse(normal_tmp)
# Spreading to wide format
normal_tmp %>% filter(year>1995) %>% select(-metric) %>% spread(year,norm_value)
# Spreading to wide format
wide_normal_tmp <- normal_tmp %>% filter(year>1995) %>% select(-metric) %>% spread(year,norm_value)
wide_normal_tmp
# Spreading to wide format
wide_normal_tmp <- normal_tmp %>%
as.data.frame() %>%
filter(year>1995) %>%
select(-metric) %>%
spread(year,norm_value)
wide_normal_tmp
wide_normal_tmp %>% glimpse()
wss <- map_dbl(1:5, ~{kmeans(select(wide_normal_tmp,-country), ., nstart=50,iter.max = 15 )$tot.withinss)})
wss <- map_dbl(1:5, ~{kmeans(select(wide_normal_tmp,-country), ., nstart=50,iter.max = 15 )$tot.withinss})
)
wide_normal_tmp
# removing countries with missing rows
wide_normal_tmp <- wide_normal_tmp[ complete.cases(wide_normal_tmp), ]
wss <- map_dbl(1:5, ~{kmeans(select(wide_normal_tmp,-country), ., nstart=50,iter.max = 15 )$tot.withinss})
n_clust <- 1:5
elbow_df <- as.data.frame(cbind("n_clust" = n_clust, "wss" = wss))
elbow_df
ggplot(elbow_df) +
geom_line(aes(y = wss, x = n_clust), colour = "#82518c") +
theme_blog()
ggplot(elbow_df) +
geom_line(aes(y = wss, x = n_clust), colour = "#82518c") +
theme_minimal()
clusters <- kmeans(select(wide_normal_tmp, -country), centers = 3)
clusters
(centers <- rownames_to_column(as.data.frame(clusters$centers), "cluster"))
centers
final_out <- wide_normal_tmp %>%
mutate(cluster = clusters$cluster)
glimpse(final_out)
pwt_long <- wide_normal_tmp %>%
pivot_longer(cols=c(-country, -cluster), names_to = "year", values_to = "avh") %>%
mutate(year = ymd(paste0(year, "-01-01")))
glimpse(WDI_long)
glimpse(processed_WDI)
processed_WDI
nested
glimpse(nested$data[1])
processed_WDI <- nested %>% unnest(cols = c(data))
glimpse(processed_WDI)
processed_WDI <- nested %>% unnest(cols = c(data)) %>% select(-iso2c)
processed_WDI
processed_WDI
processed_WDI <- nested %>% unnest(cols = c(data)) %>% select(-iso2c) %>% gather("metric","value",3:ncol(.))
processed_WDI
nested_imputation <- processed_WDI %>% group_by(country,metric) %>% nest()
nested_imputation
tmp_series <- nested_imputation$data[[1]]
tmp_series
library(imputeT)
library(imputeTS)
library(imputeTS)
glimpse(dat)
processed_WDI <- dat %>% select(-iso2c) %>% gather("metric","value",3:ncol(.))
glimpse(dat)
processed_WDI <- dat %>% select(-iso2c)
processed_WDI %>% glimpse()
processed_WDI <- dat %>% select(-iso2c) %>% gather("metric","value",3:ncol(.))
processed_WDI <- dat %>% select(-iso2c)
processed_WDI <- processed_WDI %>% gather("metric","value",3:ncol(processed_WDI))
dat
glimpse(dat)
glimpse(dat)
# 01 WDI - Import
## Returns two datasets:
#   africa_geo.rdata - a collection of shape files for all African nations
#   processed_WDI.rdata - historical data for select world bank indiators. processed to replace missing values with most recently observed numbers
library(WDI)
library(tidyverse)
library(tmap)
library(zoo)
library(imputeTS)
## Shape File ----
# Gathering African country names for querying WDI
tmp_World_names <- WDI(indicator=c("NY.GDP.PCAP.PP.CD"), start=1991, end=2015)
tmp_World_names <- tmp_World_names %>% select(iso2c,country) %>% unique()
# Subsetting African Countries from WBI data
africanCountries <- c("Algeria","Angola","Benin","Botswana",
"Burkina Faso","Burundi","Cabo Verde",
"Central African Rep","Cameroon","Chad","Congo, Dem. Rep.","Congo, Rep.",
"Cote d'Ivoire","Djibouti","Egypt, Arab Rep.","Equatorial Guinea",
"Eritrea","Ethiopia","Gabon","Gambia, The",
"Ghana","Guinea","Guinea-Bissau","Kenya",
"Lesotho","Liberia","Libya","Madagascar",
"Malawi","Mali","Mauritania","Morocco",
"Mozambique","Namibia","Niger","Nigeria",
"Rwanda","Senegal","Seychelles","Sierra Leone","Somalia",
"South Africa","South Sudan","Sudan","Swaziland","Tanzania",
"Togo","Tunisia","Uganda","Zambia","Zimbabwe")
af_country_list <- tmp_World_names %>% filter(country%in%africanCountries)
# Getting geographic Shape file for same countries
library(tmap)
data("World")
World$name <- as.character(World$name)
# There are differences in some of the country names. Changing 'World' to match WBI data
World$name <- ifelse(World$name=="Dem. Rep. Congo","Congo, Dem. Rep.",
ifelse(World$name=="Congo","Congo, Rep.",
ifelse(World$name=="Egypt","Egypt, Arab Rep.",
ifelse(World$name=="Eq. Guinea","Equatorial Guinea",
ifelse(World$name=="Gambia","Gambia, The",World$name)))))
# subsetting down to necessary columns as well as african countries above, and those missing
africa_geo <- World %>%
dplyr::select(iso_a3,name,geometry) %>%
filter(name%in%c(africanCountries,"Libya","Mauritania","Central African Rep.",
"S. Sudan","Zimbabwe","Somalia","Eritrea","Djibouti","W. Sahara"))
rm(World)
save(africa_geo,file="Datasets/africa_geo.rdata")
## WDI Test File ----
# Indicators can be searched for by keyword
WDIsearch('gdp')[1:10,]
WDI_dict <- WDIsearch()
# Selecting random subset of indicators
Indicators <- c("SI.DST.FRST.20","NY.GDP.PCAP.KD.ZG","EG.ELC.ACCS.ZS","NY.GDP.MKTP.CD")
# Income share held by lowest 20% - NY.GDP.PCAP.PP.CD
# GDP per capita growth (annual %) - NY.GDP.PCAP.KD.ZG
# Access to electricity (% of population) - EG.ELC.ACCS.ZS
# GDP (current US$) - NY.GDP.MKTP.CD
# Downloading by indicator for the last 30 years
dat = WDI(indicator=Indicators, country = af_country_list$iso2c, start=1960, end=2019)
# 01 WDI - Import
## Returns two datasets:
#   africa_geo.rdata - a collection of shape files for all African nations
#   processed_WDI.rdata - historical data for select world bank indiators. processed to replace missing values with most recently observed numbers
library(WDI)
library(tidyverse)
library(tmap)
library(zoo)
library(imputeTS)
## Shape File ----
# Gathering African country names for querying WDI
tmp_World_names <- WDI(indicator=c("NY.GDP.PCAP.PP.CD"), start=1991, end=2015)
tmp_World_names <- tmp_World_names %>% select(iso2c,country) %>% unique()
# Subsetting African Countries from WBI data
africanCountries <- c("Algeria","Angola","Benin","Botswana",
"Burkina Faso","Burundi","Cabo Verde",
"Central African Rep","Cameroon","Chad","Congo, Dem. Rep.","Congo, Rep.",
"Cote d'Ivoire","Djibouti","Egypt, Arab Rep.","Equatorial Guinea",
"Eritrea","Ethiopia","Gabon","Gambia, The",
"Ghana","Guinea","Guinea-Bissau","Kenya",
"Lesotho","Liberia","Libya","Madagascar",
"Malawi","Mali","Mauritania","Morocco",
"Mozambique","Namibia","Niger","Nigeria",
"Rwanda","Senegal","Seychelles","Sierra Leone","Somalia",
"South Africa","South Sudan","Sudan","Swaziland","Tanzania",
"Togo","Tunisia","Uganda","Zambia","Zimbabwe")
af_country_list <- tmp_World_names %>% filter(country%in%africanCountries)
# Getting geographic Shape file for same countries
library(tmap)
data("World")
World$name <- as.character(World$name)
# There are differences in some of the country names. Changing 'World' to match WBI data
World$name <- ifelse(World$name=="Dem. Rep. Congo","Congo, Dem. Rep.",
ifelse(World$name=="Congo","Congo, Rep.",
ifelse(World$name=="Egypt","Egypt, Arab Rep.",
ifelse(World$name=="Eq. Guinea","Equatorial Guinea",
ifelse(World$name=="Gambia","Gambia, The",World$name)))))
# subsetting down to necessary columns as well as african countries above, and those missing
africa_geo <- World %>%
dplyr::select(iso_a3,name,geometry) %>%
filter(name%in%c(africanCountries,"Libya","Mauritania","Central African Rep.",
"S. Sudan","Zimbabwe","Somalia","Eritrea","Djibouti","W. Sahara"))
rm(World)
save(africa_geo,file="Datasets/africa_geo.rdata")
# 01 WDI - Import
## Returns two datasets:
#   africa_geo.rdata - a collection of shape files for all African nations
#   processed_WDI.rdata - historical data for select world bank indiators. processed to replace missing values with most recently observed numbers
library(WDI)
library(tidyverse)
library(tmap)
library(zoo)
library(imputeTS)
## Shape File ----
# Gathering African country names for querying WDI
tmp_World_names <- WDI(indicator=c("NY.GDP.PCAP.PP.CD"), start=1991, end=2015)
tmp_World_names <- tmp_World_names %>% select(iso2c,country) %>% unique()
# Subsetting African Countries from WBI data
africanCountries <- c("Algeria","Angola","Benin","Botswana",
"Burkina Faso","Burundi","Cabo Verde",
"Central African Rep","Cameroon","Chad","Congo, Dem. Rep.","Congo, Rep.",
"Cote d'Ivoire","Djibouti","Egypt, Arab Rep.","Equatorial Guinea",
"Eritrea","Ethiopia","Gabon","Gambia, The",
"Ghana","Guinea","Guinea-Bissau","Kenya",
"Lesotho","Liberia","Libya","Madagascar",
"Malawi","Mali","Mauritania","Morocco",
"Mozambique","Namibia","Niger","Nigeria",
"Rwanda","Senegal","Seychelles","Sierra Leone","Somalia",
"South Africa","South Sudan","Sudan","Swaziland","Tanzania",
"Togo","Tunisia","Uganda","Zambia","Zimbabwe")
af_country_list <- tmp_World_names %>% filter(country%in%africanCountries)
# Getting geographic Shape file for same countries
library(tmap)
data("World")
World$name <- as.character(World$name)
# There are differences in some of the country names. Changing 'World' to match WBI data
World$name <- ifelse(World$name=="Dem. Rep. Congo","Congo, Dem. Rep.",
ifelse(World$name=="Congo","Congo, Rep.",
ifelse(World$name=="Egypt","Egypt, Arab Rep.",
ifelse(World$name=="Eq. Guinea","Equatorial Guinea",
ifelse(World$name=="Gambia","Gambia, The",World$name)))))
# subsetting down to necessary columns as well as african countries above, and those missing
africa_geo <- World %>%
dplyr::select(iso_a3,name,geometry) %>%
filter(name%in%c(africanCountries,"Libya","Mauritania","Central African Rep.",
"S. Sudan","Zimbabwe","Somalia","Eritrea","Djibouti","W. Sahara"))
rm(World,af_country_list,africanCountries)
save(africa_geo,file="Datasets/africa_geo.rdata")
WDI_dict <- WDIsearch()
WDI_data
# Indicators can be searched for by keyword
#WDIsearch('gdp')[1:10,]
WDI_dict <- WDIsearch()
# Selecting random subset of indicators
Indicators <- c("SI.DST.FRST.20","NY.GDP.PCAP.KD.ZG","EG.ELC.ACCS.ZS","NY.GDP.MKTP.CD")
# Income share held by lowest 20% - NY.GDP.PCAP.PP.CD
# GDP per capita growth (annual %) - NY.GDP.PCAP.KD.ZG
# Access to electricity (% of population) - EG.ELC.ACCS.ZS
# GDP (current US$) - NY.GDP.MKTP.CD
# Downloading by indicator for the last 30 years
dat = WDI(indicator=Indicators, country = af_country_list$iso2c, start=1960, end=2019)
# 01 WDI - Import
## Returns two datasets:
#   africa_geo.rdata - a collection of shape files for all African nations
#   processed_WDI.rdata - historical data for select world bank indiators. processed to replace missing values with most recently observed numbers
library(WDI)
library(tidyverse)
library(tmap)
library(zoo)
library(imputeTS)
## Shape File ----
# Gathering African country names for querying WDI
tmp_World_names <- WDI(indicator=c("NY.GDP.PCAP.PP.CD"), start=1991, end=2015)
tmp_World_names <- tmp_World_names %>% select(iso2c,country) %>% unique()
# Subsetting African Countries from WBI data
africanCountries <- c("Algeria","Angola","Benin","Botswana",
"Burkina Faso","Burundi","Cabo Verde",
"Central African Rep","Cameroon","Chad","Congo, Dem. Rep.","Congo, Rep.",
"Cote d'Ivoire","Djibouti","Egypt, Arab Rep.","Equatorial Guinea",
"Eritrea","Ethiopia","Gabon","Gambia, The",
"Ghana","Guinea","Guinea-Bissau","Kenya",
"Lesotho","Liberia","Libya","Madagascar",
"Malawi","Mali","Mauritania","Morocco",
"Mozambique","Namibia","Niger","Nigeria",
"Rwanda","Senegal","Seychelles","Sierra Leone","Somalia",
"South Africa","South Sudan","Sudan","Swaziland","Tanzania",
"Togo","Tunisia","Uganda","Zambia","Zimbabwe")
af_country_list <- tmp_World_names %>% filter(country%in%africanCountries)
# Getting geographic Shape file for same countries
library(tmap)
data("World")
World$name <- as.character(World$name)
# There are differences in some of the country names. Changing 'World' to match WBI data
World$name <- ifelse(World$name=="Dem. Rep. Congo","Congo, Dem. Rep.",
ifelse(World$name=="Congo","Congo, Rep.",
ifelse(World$name=="Egypt","Egypt, Arab Rep.",
ifelse(World$name=="Eq. Guinea","Equatorial Guinea",
ifelse(World$name=="Gambia","Gambia, The",World$name)))))
# subsetting down to necessary columns as well as african countries above, and those missing
africa_geo <- World %>%
dplyr::select(iso_a3,name,geometry) %>%
filter(name%in%c(africanCountries,"Libya","Mauritania","Central African Rep.",
"S. Sudan","Zimbabwe","Somalia","Eritrea","Djibouti","W. Sahara"))
rm(World,africanCountries)
save(africa_geo,file="Datasets/africa_geo.rdata")
## WDI Test File ----
# Indicators can be searched for by keyword
#WDIsearch('gdp')[1:10,]
WDI_dict <- WDIsearch()
# Selecting random subset of indicators
Indicators <- c("SI.DST.FRST.20","NY.GDP.PCAP.KD.ZG","EG.ELC.ACCS.ZS","NY.GDP.MKTP.CD")
# Income share held by lowest 20% - NY.GDP.PCAP.PP.CD
# GDP per capita growth (annual %) - NY.GDP.PCAP.KD.ZG
# Access to electricity (% of population) - EG.ELC.ACCS.ZS
# GDP (current US$) - NY.GDP.MKTP.CD
# Downloading by indicator for the last 30 years
dat = WDI(indicator=Indicators, country = af_country_list$iso2c, start=1960, end=2019)
rm(af_country_list)
glimpse(dat)
dat <- dat %>% select(-iso2c)
glimpse(africa_geo)
processed_WDI <- dat %>% select(-iso2c) %>% gather("metric","value",3:ncol(.))
WDI <- dat %>% select(-iso2c) %>% gather("metric","value",3:ncol(.))
dat <- WDI(indicator=Indicators, country = af_country_list$iso2c, start=1960, end=2019)
dat <- dat %>% select(-iso2c)
rm(af_country_list)
# Imputing missing data using ImputeTS
WDI <- dat %>% select(-iso2c) %>% gather("metric","value",3:ncol(.))
# 01 WDI - Import
## Returns two datasets:
#   africa_geo.rdata - a collection of shape files for all African nations
#   processed_WDI.rdata - historical data for select world bank indiators. processed to replace missing values with most recently observed numbers
library(WDI)
library(tidyverse)
library(tmap)
library(zoo)
library(imputeTS)
## Shape File ----
# Gathering African country names for querying WDI
tmp_World_names <- WDI(indicator=c("NY.GDP.PCAP.PP.CD"), start=1991, end=2015)
tmp_World_names <- tmp_World_names %>% select(iso2c,country) %>% unique()
# Subsetting African Countries from WBI data
africanCountries <- c("Algeria","Angola","Benin","Botswana",
"Burkina Faso","Burundi","Cabo Verde",
"Central African Rep","Cameroon","Chad","Congo, Dem. Rep.","Congo, Rep.",
"Cote d'Ivoire","Djibouti","Egypt, Arab Rep.","Equatorial Guinea",
"Eritrea","Ethiopia","Gabon","Gambia, The",
"Ghana","Guinea","Guinea-Bissau","Kenya",
"Lesotho","Liberia","Libya","Madagascar",
"Malawi","Mali","Mauritania","Morocco",
"Mozambique","Namibia","Niger","Nigeria",
"Rwanda","Senegal","Seychelles","Sierra Leone","Somalia",
"South Africa","South Sudan","Sudan","Swaziland","Tanzania",
"Togo","Tunisia","Uganda","Zambia","Zimbabwe")
af_country_list <- tmp_World_names %>% filter(country%in%africanCountries)
# Getting geographic Shape file for same countries
library(tmap)
data("World")
World$name <- as.character(World$name)
# There are differences in some of the country names. Changing 'World' to match WBI data
World$name <- ifelse(World$name=="Dem. Rep. Congo","Congo, Dem. Rep.",
ifelse(World$name=="Congo","Congo, Rep.",
ifelse(World$name=="Egypt","Egypt, Arab Rep.",
ifelse(World$name=="Eq. Guinea","Equatorial Guinea",
ifelse(World$name=="Gambia","Gambia, The",World$name)))))
# subsetting down to necessary columns as well as african countries above, and those missing
africa_geo <- World %>%
dplyr::select(iso_a3,name,geometry) %>%
filter(name%in%c(africanCountries,"Libya","Mauritania","Central African Rep.",
"S. Sudan","Zimbabwe","Somalia","Eritrea","Djibouti","W. Sahara"))
rm(World,africanCountries)
save(africa_geo,file="Datasets/africa_geo.rdata")
## WDI Test File ----
# Indicators can be searched for by keyword
#WDIsearch('gdp')[1:10,]
WDI_dict <- WDIsearch()
# Selecting random subset of indicators
Indicators <- c("SI.DST.FRST.20","NY.GDP.PCAP.KD.ZG","EG.ELC.ACCS.ZS","NY.GDP.MKTP.CD")
# Income share held by lowest 20% - NY.GDP.PCAP.PP.CD
# GDP per capita growth (annual %) - NY.GDP.PCAP.KD.ZG
# Access to electricity (% of population) - EG.ELC.ACCS.ZS
# GDP (current US$) - NY.GDP.MKTP.CD
# Downloading by indicator for the last 30 years
dat <- WDI(indicator=Indicators, country = af_country_list$iso2c, start=1960, end=2019)
dat <- dat %>% select(-iso2c)
rm(af_country_list)
# Imputing missing data using ImputeTS
WDI <- dat %>% select(-iso2c) %>% gather("metric","value",3:ncol(.))
WDI <- dat %>% gather("metric","value",3:ncol(.))
glimpse(dat)
dat %>% gather("key","value")
head(dat)
WDI <- dat %>% pivot_longer(-c(country,year),names_to = "metric",values_to = "value")
glimpse(WDI)
nested_WDI <- WDI %>% group_by(country,metric) %>% nest()
tmp_series <- nested_WDI$data[[1]]
tmp_series
as.ts(tmp_series)
tmp_series <- as.ts(tmp_series)
tmp_series
imputeTS::na_interpolation(tmp_series)
